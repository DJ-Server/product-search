package com.naver.productsearch.dolphago.slack

import org.springframework.stereotype.Service
import javax.annotation.PostConstruct


@Service
class InterviewService {
    lateinit var list: List<String>

    @PostConstruct
    fun setUp() {
        val splitData = datas.split("\n")
        list = splitData
        list.forEach {
            println(it)
        }
    }

    fun createDaily(number: Int): SlackBody {
        var index = number
        if(list.size <= index){
            index %= 168
        }
        return SlackBody(list[index])
    }

    companion object {
        val datas = "### 1. JVM 메모리 옵션 중에 xms, xmx의 차이점에 대해서 설명해주세요.\n" +
                "### 2. JVM Heap에서 Out of Memory가 났을 때 뭘 해야 할까요.\n" +
                "### 3. DI가 뭔가요\n" +
                "### 3.1  예상 꼬리 질문: 그럼 DI는 만능이겠네요 ?\n" +
                "### 4. Bean의 LifeCycle에 대해 설명해주세요.\n" +
                "### 4.1.  예상 꼬리 질문: 그러면 스프링이 지원하는 빈 생명주기 콜백방법좀 말해보실래요??\n" +
                "### 4.2 그러면 @Autowired는 어떻게 빈 객체를 찾아 주입하는건가요? 간단하게 설명좀 해보실래요?\n" +
                "### 5. ACID에 대해 설명해주세요\n" +
                "### 6. 격리 수준에 대해 설명해주세요. @@@@@\n" +
                "### 7. 스트림과 람다가 생겨나게 된 배경에 대해 아시나요?\n" +
                "### 9. HTTP Message 401과 403 설명\n" +
                "### 10. Thread pool 설정해봤어? 옵션 뭐뭐 알고 있니? @\n" +
                "### 11. 개발하다가 어려움을 겪은 이야기 해줘\n" +
                "### 12.요새 생각하고 있는 기술적으로 관심있는 것?\n" +
                "### 13. MVC 패턴의 흐름을 Component 중심으로 설명해줘\n" +
                "### 14. TCP에서 3-Handshaking, 4-Handshaking에 대해 설명해주세요.\n" +
                "### 14.1 예상 꼬리 질문- 그럼 서버에서 FIn을 전송하기전 전송한 패킷이 패킷유실로인한 재전송으로 인해 FIN패킷보다 늦게도착하면요?\n" +
                "### 15. N+1에 대해 설명해 주세요\n" +
                "### 16. DB index 사용 이유\n" +
                "### 17. DB index 구조 @\n" +
                "### 17-1 인덱스 동작 순서좀 말해보실래요 ?\n" +
                "### 18. elesticsearch와 dbms에서 like 검색의 차이점\n" +
                "### 19. boolean값 인덱스 사용해도되는지\n" +
                "### 20. Bean Scope좀 말해볼래연\n" +
                "### 21. http. https 차이\n" +
                "### 22. AOP가 뭔지 @@\n" +
                "### 23. AOP 실행구조 @@\n" +
                "### 23.1  꼬리질문 AOP 핵심용어\n" +
                "### 24. https가 실행되는 원리, 구조 @@@@@@@@\n" +
                "### 24-1 그럼 공개키와 비공개키 차이좀 말해보실래요\n" +
                "### 25. MVC패턴 설명 @\n" +
                "### 26. 자바 JVM @@@@@@\n" +
                "### 27. 자바 GC의 종류 @@\n" +
                "### 28.자바에서 스레드의 동시성을 해결하기위한 방법 @\n" +
                "![image](https://user-images.githubusercontent.com/40031858/146105731-7c6adf07-034f-4968-b163-afb77b41c927.png)\n" +
                "### 29 JPA에 대한 질문\n" +
                "### 29.1  예상 꼬리 질문:  JPA 영속성 컨텍스트의 이점(5가지)을 설명해주세요.\n" +
                "### 30 자바 마지막으로 사용했던 버젼좀 말해보세요\n" +
                "### 31. 그럼 마지막으로 사용했던 버전이 자바8에서 뭐가변경되었나여\n" +
                "### 32. 자바 함수형 프로그래밍의 정의 @@@@\n" +
                "### 33. 본인은 어떤한 요구사항에 대한 테스트 코드를 어떤 방법으로 작성하는지\n" +
                "### 34. 네트워크에서 킵얼라이브란?\n" +
                "### 34.1  예상 꼬리질문. 파이프라인??? 그게뭔가요?\n" +
                "### 35. 네트워크 CORS 설명 @@@@@@\n" +
                "### 35.1  예상 꼬리 질문: Spring에서 CORS 에러를 해결하기 위한 방법을 설명해주세요. *\n" +
                "### 36. 레디스를 설명하시오 @@@@@\n" +
                "### 36.1  예상 꼬리질문. 그러면 redis랑 스프링 부트 캐시 차이점이 뭐에요\n" +
                "### 36.2 레디스는 무슨알고리즘을 쓰고 그 알고리즘의 단점은 뭔가요\n" +
                "### 37. Java에서 Mutable vs Immutable 객체의 차이점 @@@\n" +
                "### 38. 클라이언트의 요청이 들어올때마다 Thread가 생성되고 Controller에 요청을 할텐데 어떻게 1개의 Controller만으로 요청들을 다 처리할 수 있는지? @\n" +
                "### 39. @Controller , @Service, @Repository 설명해주세요\n" +
                "### 40. JAVA의 Collection에 대해 설명해주세요 @\n" +
                "### 41. Controller랑 RestController랑 어떻게 다른가요?\n" +
                "### 42. RestAPI가 뭔지 설명해주세요\n" +
                "### 43. Http Method에 대해 나열하고, 어떤 의미인지 설명해주세요\n" +
                "### 44. 관계형 DB에 비해 NoSQL이 더 좋은점이 무엇인가요? @@\n" +
                "### 45. DB 샤딩이 뭔지 알려주세요 @@@\n" +
                "### 46. DB인덱스에 대해 섦명해주세요 @@\n" +
                "### 47. 그럼 인덱스가 많으면 좋겠네요? @@@@@@@\n" +
                "### 48 DB 인덱스와 카디널리티에 대해 연관지어 설명해주세요 @@\n" +
                "### 49. 관계형 DB의 파티셔닝에 대해 설명해주세요. @@\n" +
                "### 50. 파티셔닝이 뭐가 좋은지 알려주세요 @@@@@\n" +
                "### 50.1 정규화가 뭔지좀 말해보세요\n" +
                "### 50.2 수평파티셔닝과 수직파티셔닝에 대해서 말해주세요\n" +
                "### 51. SpringSecurity의 UserDetails Service에 대해 설명해주세요\n" +
                "### 52.  `Filter와 Interceptor, AOP에 대해 설명해주세요` @@@@@\n" +
                "### 52.1   예상 꼬리 질문:   Filter는 Servlet의 스펙이고, Interceptor는 Spring MVC의 스펙입니다. Spring Application에서\n" +
                "### Filter와 Interceptor를 통해 예외를 처리할 경우 어떻게 해야 할까요?\n" +
                "### 53. DI의 3종류에 대해 설명해주세요 @@\n" +
                "### 54. IOC란 뭘까요?\n" +
                "### 55. cache에대해 아는거 다말하세요\n" +
                "### 56. Redis캐시와 같은 리모트캐시말고 로컬캐시를 사용하는 방법도 있는데 해보셨나요? @@\n" +
                "### 57.  Session과 Cookie에 대해 알고계신가요? @@@@@@@@@\n" +
                "### 58 . 그럼 세션과 쿠키의 차이점좀 말해보세요 @\n" +
                "### 58.1  예상 꼬리 질문.  그럼 세션과 jwt를 좀 말해보실래요?\n" +
                "### 59. 자바에서  optional이란?\n" +
                "### 60. 싱글톤을 사용하는 이유 @@@@@@@\n" +
                "### 60.1  예상 꼬리질문 : 싱글톤 패턴에 대해서 자세히좀 설명해볼래요\n" +
                "### 61. db connection pool이 뭔지? @@\n" +
                "### 62. threadpool을 그럼 커넥션풀과 연관지어 설명해봐 @@@@@@@\n" +
                "###  63. jdbc statement, preparedStatement 차이? @@\n" +
                "### 64. Master slave db @@\n" +
                "### 65. stream vs parallel stream @@@@\n" +
                "### 66. 유투브 구독자들에게 해당 유투버의 영상이 게시되었을 때, 어떻게 알림이 작동할까? 만약 1억구독자라면 @@@@@@@@\n" +
                "### 67. 행의 개수가 매우 많은(데이터 수가 많은) 테이블을 설계해야한다. 어떻게 설계할것인가? @\n" +
                "### 68. 데이터베이스의 멀티인덱싱에 대해 아는가? @@@\n" +
                "### 69. 특별한 설정이 없다면 싱글턴 패턴인데, 다수의 사용자가 하나의 객체에 진입하려고 하면 어떤 문제가 발생하고 어떻게 해결해야하는지 말해달라. @@\n" +
                "### 70. 해시테이블 VS 해쉬맵\n" +
                "### 71. OSI 7 layer좀 설명좀 @\n" +
                "### 72. 위에 뭐 있긴하지만 BTree와 B+Tree의 차이를 간단하게 말해볼래\n" +
                "### 72.1  예상 꼬리질문 :  그러면 mysql은 왜 균형트리중 하필 b-tree선택했을까요 avl, rbtree도 있는데요\n" +
                "### 73. SQL injection 좀 말해볼래? @@\n" +
                "### 74. Error와 Exception의 차이를 말좀해볼래?\n" +
                "### 75. 웹브라우저에 www.naver.com을 치면 어떤일이 일어날까? @@@@\n" +
                "### 76.  GET과 POST의 차이점은? @@\n" +
                "### 77. Web Server와 WAS의 차이 @@@@@\n" +
                "### 77.1   예상 꼬리질문 그렇다면 가장 효율적인 방법은요 ? @@\n" +
                "### 78. CSRF란? @@@\n" +
                "### 79.  HashTable, HashMap ,  ConcurrentHashmap, synchronized hashmap @@\n" +
                "### 80. 가비지 컬렉션이란 ?\n" +
                "### 81. java List 인터페이스 구현체의 종류 @@@\n" +
                "### 82. String, StringBuffer, StringBuilder 차이는요?\n" +
                "### 83. Java의 메모리 영역은?\n" +
                "### 84. 제네릭이란?\n" +
                "### 85. 인터페이스와 추상클래스 차이는? @@@\n" +
                "### 85-1. 클래스와 인터페이스 차이는???\n" +
                "### 86 서블릿 컨테이너 동작방식은요? @@@@\n" +
                "### 87 서블릿좀 간단 설명 @@@@@@\n" +
                "### 88. JdkDynamic Proxy vs Cglib @@@\n" +
                "### 89. 멀티 프로세스 대신 멀티 스레드를 사용하는 이유\n" +
                "### 90. Context Switching\n" +
                "### 91. TCP UDP\n" +
                "### 92. Innodb , Myisam @@@@\n" +
                "### 93. JVM 구조 자세하게\n" +
                "### 94 자바 메모리영역 다시한번 자세하게 필요부분만\n" +
                "### 95. spring ETC\n" +
                "### 95. Servlet은 어떻게 Spring Container를 look-up하나?\n" +
                "### 96. Autowiring 과정에 대해서 설명해주세요. ()\n" +
                "### 97.  @Resource, @Autowired, @Inject 특징좀 ..\n" +
                "### 98. multi indexing 할때 칼럼 순서는 어떻게 정할것인가요? (당근마켓)\n" +
                "### 99. multi indexing에서 (a,b,c) 칼럼을 인덱스 걸었을때 ab, ac, bc 이경우들은 인덱스를 탈까요 ? (당근마켓)\n" +
                "### 100. 실무에서 사용하는 디자인 패턴 대표적으로 세가지 말해보고 설명해줄래? (당근마켓)\n" +
                "### 101. 그러면 옵저버 패턴, 프록시 패턴좀 자세하게 설명해줄래요 ?  (장점과 왜사용하는지 이유까지 ).  (당근 마켓)\n" +
                "### 102. 동기 , 비동기, 블로킹 , 논블로킹의 개념에 대해서좀 말해볼래요? (당근마켓)\n" +
                "### 103. netty vs tomcat.  (당근마켓)\n" +
                "### 104. 컴파일러와 인터프리터의 차이와 장단점에 대해서 설명해주세요 (당근마켓)\n" +
                "### 105. DAO와 DTO에 대해서 설명해주세요 (당근마켓)\n" +
                "### 106. MVC1, MVC2, MVVM 패턴은 무엇인가요? (당근마켓)\n" +
                "### 107. 객체지향의 특징에 대해서 설명해주세요. (당근마켓)\n" +
                "### 107-1  예상 꼬리질문: 그럼 말씀하신 오버로딩과 오버라이딩의 차이는 뭔가요\n" +
                "### 108. 객체지향 5원칙(SOLID)에 대해서 설명해주세요. (당근마켓)\n" +
                "### 109. 전략 패턴이란 무엇이고 왜 사용해야 하나요? (당근마켓)\n" +
                "### 110. 도커란 무엇인가요? 왜 사용하나요? (당근마켓)\n" +
                "### 111. 자바 접근제어자 4개 설명해주세요 (당근마켓)\n" +
                "### 112. 프레임워크와 라이브러리의 차이점이 무엇인가요? (당근마켓)\n" +
                "### 113. Join의 종류와 차이점에 대해서 설명해주세요 (당근마켓)\n" +
                "### 114. REST의 약자는? (당근마켓)\n" +
                "### 115. Hash란 무엇인가요? (당근마켓)\n" +
                "### 116. @Component , @Configuration+@Bean 차이를 말해보실래요\n" +
                "### 117. Java 에서 직렬화, 역직렬화란?\n" +
                "### 118. class vs 객체 vs 인스턴스\n" +
                "### 119. JVM , JRE, JDK 설명좀?\n" +
                "### 120. GC 에 사용하는 알고리즘들좀 설명해주세요\n" +
                "### 121. Having 과 where의 차이좀 설명해보세요\n" +
                "### 122. DTO , VO , Bean , POJO 설명\n" +
                "### 123 transient와 volatile설명 해주세요 (두나무)\n" +
                "### 124. multi master/slave db 설명해보고 이 클러스터링 방식을할때 주의할점 (두나무)\n" +
                "### 125. jpql에서 groupby 어떻게?(두나무)\n" +
                "### 126. enum클래스에 대해 아는거 전부 말해줘 (두나무)\n" +
                "### 127. hibernate, jpa, spring data jpa 설명좀 (두나무)\n" +
                "### 128. callback, listener에 대해서좀 설명해주세요\n" +
                "### 129. annotation이란 뭔가요 ?\n" +
                "### 130. 카프카 간단하게 설명좀..?\n" +
                "### 131. 메시지브로커와 이벤트 브로커의 특징은요?\n" +
                "### 132. ddl, dml, dcl, dql, tcl좀 설명해 보실래요?\n" +
                "### 133. 카프카 토픽, 파티션, offset이란?\n" +
                "### 134. 컨텍스트 스위칭은 어느 경우에 일어나나요?\n" +
                "### 135. application context란 뭘까요?\n" +
                "### 135.1 application context vs beanfactory\n" +
                "### 136. ssh, ssl은 뭔가요 ?\n" +
                "### 137. 정렬 알고리즘들좀 말해보실래요\n" +
                "### 138 grpc란 무엇인가요?\n" +
                "### 138-1 그럼 grpc랑 rest의 차이는 뭔가요\n" +
                "### 138.2 protobuf에 대해서 알고계신가요? 이것은 왜 사용할까요?\n" +
                "### 138-3 gRPC는 무엇이며, RPC는 무엇인가요? 왜 쓸까요?\n" +
                "### 139. 싱글톤을 만들때 어떤 방식으로 코드를 작성하시나요\n" +
                "### 140. final로 선언한 멤버의 데이터를 변경하는 방법은?\n" +
                "### 140-1. 리플렉션을 사용하지 않고 데이터를 변경하는 방법은 아시나요\n" +
                "### 141 메세지큐나 이벤트큐를 사용하는 이유는 무엇일까요 ?\n" +
                "### 142 여러 메세지큐들이 있는데 카프카 만이 가진 장점은 무엇일까요\n" +
                "### 143 이벤트큐에 대해서 말하셨는데 그러면 메세지큐와 이벤트큐의 차이는 뭔가요?\n" +
                "### 144. 배열과 리스트의 차이는 무엇인가요\n" +
                "### 145. set과 Map의 차이는 무엇인가요\n" +
                "### 145-1. 그렇다면 Map을 사용할때 주의할점은 뭐가있을까요\n" +
                "### 146. scale out 과 scale up 에 대해서 설명해 보실래요\n" +
                "### 147. gradle에서 compile과 implementation차이\n" +
                "### 148. List 객체의 final 한정자가 갖는 의미는 뭘까요\n" +
                "### 149. 디자인패턴 간단 요약\n" +
                "### 151. Checked Exception과 Unchecked Exception에 대해 설명해주세요. 스프링 트랜잭션 추상화에서 rollback 대상은 무엇일까요?\n" +
                "### 152. Spring DI/IoC는 어떻게 동작하나요?\n" +
                "### 153. POJO란 무엇인가요? Spring Framework에서 POJO는 무엇이 될 수 있을까요?\n" +
                "### 154. 프론트 컨트롤러 패턴이란 무엇인가요?\n" +
                "### 155. 스프링 빈(Spring Bean)이란?\n" +
                "### 156. 우리가 스프링을 사용하는 이유는 무엇일까요?\n" +
                "### 157. XSS란?\n" +
                "### 158. callby value vs call by reference\n" +
                "### 159. String이 불변인 이유에 대해 아시나요?\n" +
                "### 159-1. 그러면 new String(“”)과 String=“”차이는 뭔가요\n" +
                "### 160. short url 을 구현하고 싶습니다 어떻게 할까요?\n" +
                "### 161. redis persistence\n" +
                "## 162. 다중 서버에서 세션은 어떻게?\n" +
                "## 162. junit4, junit5 차이 및 junit5 장점\n" +
                "## 163. stub, mock , spy 차이\n" +
                "### 163. 슈퍼타입 토큰이란?\n" +
                "### 164. JPA 낙관락, 비관락\n" +
                "### 165. orelseGet과 orelse차이는?\n" +
                "### 166. 인덱스로 성능 향상이 어려운 경우\n" +
                "### 167. @Transactional은 Proxy로동작...!\n" +
                "### 168. zipkin에대해서 아는지 msa에서 타파트 요청은 디버깅어떻게?\n"
    }
}
